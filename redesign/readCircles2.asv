%function [M_mat]=readCircles2(t,c) % redo for parfor loop.
function [myPreFft_noCsYet]=readCircles2(t,c) % redo for parfor loop.
                                                     % % does not take such a big struct.
[ntimesteps, rMin ,rMax, ss ,ncs ,plotOn ,azimuthalSet, azimuthalSetSize ,printStatus, lags]=constants();
%[M_mat]=initData2("myPreFft_noTimeYet");
  Bavg = zeros(ss,rMax+1);
  tic
      sprintf('%s%d%s%d','*t = ',t,'**c=',c)
      M_mat = zeros(540,540); % streamwiseData
      if t==1
      %x_vec = zeros(1,540); % streamwiseData
      %y_vec = zeros(1,540); % streamwiseData
        x_vec = [];
      y_vec = [];

      end
      cc = sprintf( '%03d', c  ) ;
      tt = sprintf( '%04d', t  ) ;
      %cc = 0001;
      %tt = 0001 ;
      daPath = '/home/mi/podData/snaps2/';
      %daPath = '/home/mi/podData/snapsTest/';
      fileName = [ daPath 'snap_cs_' num2str(cc) '_ts_' num2str(tt) '.dat']; % t starts at 0.
      formatSpec = '%f';
      a=fopen(fileName, 'r');
      importedData = fscanf(a,formatSpec);
      for r=1:rMax  % r is azimuthal mode
        %sprintf('%s%d%s%d','*r = ',r);
      for p=1:540 % p is point
        pointOnLine_r = p + 540*r;
        M_mat(r,p)=importedData(pointOnLine_r,1); % 5 for streamwise entry of the data matrix % 1 for 1 col
      end %p
      end %r
%&---------------------------------------------------------------------
      for p=1:540 % p is point
          % myPreFft_noTimeYet(1).circle(4).dat(1,540)
        % eliminate 3x540 array, that is so expensive to carry around!
        %myPreFft(c).t(t).circle(p).dat(1,:)=    M(:,p);
        %myPreFft_noTimeYet(p).dat(1,:)=    M_mat(:,p); % this works
        myPreFft_noCsYet(p).dat =    M_mat(:,p)';

      end %p
end % fc